{"version":3,"sources":["../../src/react-prism.js"],"names":["React","Provider","Component","getChildContext","client","props","render","children","childContextTypes","PropTypes","object","withData","query","_propsFn","opts","propsFn","options","name","logErrors","WrappedComponent","WithData","constructor","subscribeToQuery","variables","context","subscribe","resolverData","setState","data","loading","errors","networkErrors","state","componentDidMount","componentWillReceiveProps","componentWillUnmount","unsubscribe","contextTypes","withMutation","mutation","WithMutation","mutationCallback","mutate","then","Object","assign","loadable","LoadingComponent","ErrorComponent","Loadable","errorComponent","renderErrors","map","message","i","displayName","getDisplayName","compose","funcs","length","arg","reduce","a","b","args"],"mappings":"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","file":"react-prism.js","sourcesContent":["import React from 'react';\n\nexport class Provider extends React.Component {\n  static childContextTypes = {\n    client: React.PropTypes.object\n  };\n\n  getChildContext() {\n    return { client: this.props.client };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport function withData(query, _propsFn, opts = {}) {\n  const propsFn   = _propsFn       || ((props) => { return { options: {} }});\n  const name      = opts.name      || 'query';\n  const logErrors = opts.logErrors === false ? false : true;\n\n  return (WrappedComponent) => {\n    return class WithData extends React.Component {\n      static contextTypes = {\n        client: React.PropTypes.object\n      };\n\n      constructor(props) {\n        super(props);\n        this.state = {\n          data: {\n            errors: null,\n            networkErrors: null,\n            loading: true\n          }\n        };\n        this.variables = propsFn(props);\n      }\n\n      componentDidMount() {\n        if (query) this.subscribeToQuery(query, this.variables);\n      }\n\n      componentWillReceiveProps({ data = {} }) {\n        // merge this component's data into any prevously fetched data from another\n        // wrapped parent component\n        this.setState({ data: { ...data, ...this.state.data } });\n      }\n\n      componentWillUnmount() {\n        if (query) this.context.client.unsubscribe(query);\n      }\n\n      render() {\n        return (\n          <WrappedComponent\n            data={this.state.data}\n            variables={this.variables}\n            {...{...this.props, [name]: this.subscribeToQuery}}\n          />\n        );\n      }\n\n      subscribeToQuery = (query, variables) => {\n        return this.context.client.subscribe(query, variables, logErrors, (resolverData) => {\n          this.setState({\n            data: {\n              ...resolverData.data,\n              loading: false,\n              errors: resolverData.errors,\n              networkErrors: resolverData.networkErrors\n            }\n          });\n        });\n      }\n    };\n  }\n}\n\nexport function withMutation(mutation, opts = {}) {\n  const name      = opts.name      || 'mutate';\n  const logErrors = opts.logErrors === false ? false : true;\n\n  return (WrappedComponent) => {\n    return class WithMutation extends React.Component {\n      static contextTypes = {\n        client: React.PropTypes.object\n      };\n\n      constructor(props) {\n        super(props);\n        this.state = { data: {} };\n      }\n\n      render() {\n        // TODO: use a lifecycle hook here? Don't mutate props\n        Object.assign(this.props.data, this.state.data);\n\n        return (\n          <WrappedComponent {...{...this.props, [name]: this.mutationCallback}} />\n        );\n      }\n\n      mutationCallback = (variables) => {\n        return this.context.client.mutate(mutation, variables, logErrors)\n          .then(resolverData => {\n            if (resolverData.errors) {\n              this.setState({\n                data: {\n                  errors: resolverData.errors,\n                  networkErrors: resolverData.networkErrors\n                }\n              });\n            }\n            return resolverData;\n          });\n      }\n    };\n  }\n}\n\nexport function loadable(LoadingComponent = null, ErrorComponent = null) {\n  return (WrappedComponent) => {\n    return class Loadable extends React.Component {\n      static displayName  = `Loadable(${getDisplayName(WrappedComponent)})`;\n\n      render() {\n        if (this.props.data.loading) {\n          return LoadingComponent ? <LoadingComponent {...this.props} /> : <div>Loading...</div>;\n        } else {\n          return <WrappedComponent {...{...this.props, errorComponent: this.renderErrors()}}/>;\n        }\n      }\n\n      renderErrors() {\n        const { networkErrors } = this.props.data;\n\n        if (networkErrors) {\n          return ErrorComponent\n          ? <ErrorComponent {...this.props}/>\n          : <div>{networkErrors.map(({message}, i) => <div key={i}>{message}</div>)}</div>;\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n}\n\n// thank you react-redux:\nexport function compose(...funcs) {\n  if (funcs.length === 0) {\n    return arg => arg\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0]\n  }\n\n  return funcs.reduce((a, b) => (...args) => a(b(...args)))\n}\n\nfunction getDisplayName(WrappedComponent) {\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\n"]}