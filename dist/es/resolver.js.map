{"version":3,"sources":["../../src/resolver.js"],"names":["UrlBuilderFactory","Normalizer","index","show","create","update","deleteAction","Resolver","store","loader","http","host","constructor","options","entityName","forceFetch","actionContext","UrlBuilder","url","resetForceFetch","value","opts","forceFetchResource","normalize","parse","includeResponseHeaders","storeQuery","args","obj","ids","resourceContext","context","_","Promise","all","map","nestedId","serialize","delete"],"mappings":"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","file":"resolver.js","sourcesContent":["import UrlBuilderFactory from './url-builder';\nimport Normalizer from './normalize';\nimport index from './actions/index';\nimport show from './actions/show';\nimport create from './actions/create';\nimport update from './actions/update';\nimport deleteAction from './actions/delete';\n\nexport default function Resolver({ store, loader, http, host }) {\n  return class Resolver {\n    constructor(options = {}) {\n      this.entityName = options.entityName;\n      this.forceFetch = false;\n\n      this.actionContext = {\n        UrlBuilder: UrlBuilderFactory((options.host || host), options.url),\n        resetForceFetch: (value) => (this.forceFetch = value),\n        entityName: this.entityName,\n        store,\n        loader,\n        http\n      }\n    }\n\n    index(opts = {}) {\n      return index({\n        ...this.actionContext,\n        forceFetchResource: this.forceFetch,\n        normalize: Normalizer(opts.parse, opts.normalize, this.entityName),\n        includeResponseHeaders: (opts.includeResponseHeaders || false),\n        storeQuery: (opts.storeQuery || (args => obj => true))\n      }, opts);\n    }\n\n    show({ ids , ...opts } = {}) {\n      const resourceContext = {\n        ...this.actionContext,\n        forceFetchResource: this.forceFetch,\n        normalize: Normalizer(opts.parse, opts.normalize, this.entityName),\n        includeResponseHeaders: (opts.includeResponseHeaders || false)\n      };\n\n      if (ids) {\n        return (obj, args, context, _) => {\n          return Promise.all(obj[ids].map(nestedId => {\n            return show(resourceContext, obj, args, { ...opts, nestedId });\n          }));\n        }\n      } else {\n        return (obj, args, context, _) => {\n          return show(resourceContext, obj, args, opts);\n        }\n      }\n    }\n\n    create(opts = {}) {\n      return create({\n        ...this.actionContext,\n        normalize: Normalizer(opts.parse, opts.normalize, this.entityName),\n        serialize: (opts.serialize || this.serialize || ((args) => args)),\n        update: (opts.update || ((...args) => args))\n      }, opts);\n    }\n\n    update(opts = {}) {\n      return update({\n        ...this.actionContext,\n        normalize: Normalizer(opts.parse, opts.normalize, this.entityName),\n        serialize: (opts.serialize || this.serialize || ((args) => args)),\n        update: (opts.update || ((...args) => args))\n      }, opts);\n    }\n\n    delete(opts = {}) {\n      return deleteAction({ // delete is a reserved word\n        ...this.actionContext,\n        normalize: Normalizer(opts.parse, opts.normalize, this.entityName),\n        serialize: (opts.serialize || this.serialize || ((args) => args)),\n        update: (opts.update || ((...args) => args))\n      }, opts);\n    }\n  }\n}\n"]}