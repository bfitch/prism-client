{"version":3,"sources":["../../src/url-builder.js"],"names":["UrlBuilderFactory","host","defaultUrl","UrlBuilder","constructor","_obj","args","urlFn","id","idValue","obj","Object","keys","length","values","pop","customUrl","href","path","params","_customUrl","headers","url","undefined"],"mappings":"AAAA,eAAe,SAASA,iBAAT,CAA2BC,OAAO,EAAlC,EAAsCC,UAAtC,EAAkD;AAC/D,SAAO,MAAMC,UAAN,CAAiB;AACtBC,gBAAYC,IAAZ,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,EAA/B,EAAmCC,OAAnC,EAA4C;AAC1C,YAAMC,MAAaJ,QAAQK,OAAOC,IAAP,CAAYN,IAAZ,EAAkBO,MAA3B,GAAqCP,IAArC,GAA4CD,IAA9D;AACA,WAAKG,EAAL,GAAkBC,YAAYC,IAAIF,EAAJ,IAAUE,IAAIF,EAAJ,CAAV,GAAoBG,OAAOG,MAAP,CAAcJ,GAAd,EAAmBK,GAAnB,GAAyBP,EAAzB,CAAhC,CAAlB;AACA,WAAKQ,SAAL,GAAmBT,SAASA,MAAMG,GAAN,CAAV,IAAyBR,UAA3C;AACD;;AAED,QAAIe,IAAJ,GAAW;AACT,aAAQ,GAAEhB,IAAK,GAAE,KAAKiB,IAAL,EAAY,EAA7B;AACD;;AAED,QAAIC,MAAJ,GAAa;AACX,aAAO,KAAKC,UAAL,GAAkBD,MAAzB;AACD;;AAED,QAAIE,OAAJ,GAAc;AACZ,aAAO,KAAKD,UAAL,GAAkBC,OAAzB;AACD;;AAEDH,WAAO;AACL,UAAI,KAAKV,EAAT,EAAa,OAAQ,GAAE,KAAKY,UAAL,GAAkBE,GAAI,IAAG,KAAKd,EAAG,EAA3C;AACb,aAAO,KAAKY,UAAL,GAAkBE,GAAzB;AACD;;AAEDF,iBAAa;AACX,UAAI,OAAO,KAAKJ,SAAZ,KAA0B,QAA9B,EAAwC;AACtC,eAAO;AACLM,eAAK,KAAKN,SADL;AAELG,kBAAQI,SAFH;AAGLF,mBAASE;AAHJ,SAAP;AAKD,OAND,MAMO;AACL,eAAO;AACLD,eAAM,KAAKN,SAAL,CAAeM,GAAf,IAAsBpB,UADvB;AAELiB,kBAAQ,KAAKH,SAAL,CAAeG,MAFlB;AAGLE,mBAAS,KAAKL,SAAL,CAAeK;AAHnB,SAAP;AAKD;AACF;AAtCqB,GAAxB;AAwCD","file":"url-builder.js","sourcesContent":["export default function UrlBuilderFactory(host = '', defaultUrl) {\n  return class UrlBuilder {\n    constructor(_obj, args, urlFn, id, idValue) {\n      const obj       = (args && Object.keys(args).length) ? args : _obj;\n      this.id         = idValue || (obj[id] ? obj[id] : Object.values(obj).pop()[id]);\n      this.customUrl  = (urlFn && urlFn(obj)) || defaultUrl;\n    }\n\n    get href() {\n      return `${host}${this.path()}`;\n    }\n\n    get params() {\n      return this._customUrl().params;\n    }\n\n    get headers() {\n      return this._customUrl().headers;\n    }\n\n    path() {\n      if (this.id) return `${this._customUrl().url}/${this.id}`;\n      return this._customUrl().url;\n    }\n\n    _customUrl() {\n      if (typeof this.customUrl === 'string') {\n        return {\n          url: this.customUrl,\n          params: undefined,\n          headers: undefined\n        };\n      } else {\n        return {\n          url: (this.customUrl.url || defaultUrl),\n          params: this.customUrl.params,\n          headers: this.customUrl.headers\n        };\n      }\n    }\n  }\n}\n"]}