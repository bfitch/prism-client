{"version":3,"sources":["../../src/loader.js"],"names":["DataLoader","Loader","constructor","http","loader","fetchEntity","load","urlObject","cache","url","stringify","clearUrls","_promiseCache","clear","urls","Promise","all","map","JSON","parse","href","params","headers"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;;AAEA,eAAe,MAAMC,MAAN,CAAa;AAC1BC,cAAYC,IAAZ,EAAkB;AAChB,SAAKC,MAAL,GAAc,IAAIJ,UAAJ,CAAeK,YAAYF,IAAZ,CAAf,CAAd;AACD;;AAEDG,OAAKC,SAAL,EAAgB,EAAEC,KAAF,KAAY,EAAEA,OAAO,KAAT,EAA5B,EAA8C;AAC5C,UAAMC,MAAMC,UAAUH,SAAV,CAAZ;AACA,WAAO,KAAKH,MAAL,CAAYE,IAAZ,CAAiBG,GAAjB,CAAP;AACD;;AAEDE,cAAY;AACV,SAAKP,MAAL,CAAYQ,aAAZ,CAA0BC,KAA1B;AACD;;AAEDA,QAAMN,SAAN,EAAiB;AACf,QAAIE,GAAJ;;AAEA,QAAI,EAAE,OAAOF,SAAP,KAAqB,QAAvB,CAAJ,EAAsC;AACpCE,YAAMC,UAAUH,SAAV,CAAN;AACD,KAFD,MAEO;AACLE,YAAMF,SAAN;AACD;AACD,SAAKH,MAAL,CAAYS,KAAZ,CAAkBJ,GAAlB;AACD;AAvByB;;AA0B5B,SAASJ,WAAT,CAAqBF,IAArB,EAA2B;AACzB;AACA;AACA,SAAQW,IAAD,IAAU;AACf,WAAOC,QAAQC,GAAR,CACLF,KAAKG,GAAL,CAASR,OAAON,KAAKe,KAAKC,KAAL,CAAWV,GAAX,CAAL,CAAhB,CADK,CAAP;AAGD,GAJD;AAKD;;AAED,SAASC,SAAT,CAAmBH,SAAnB,EAA8B;AAC5B,QAAM,EAAEa,IAAF,EAAQC,MAAR,EAAgBC,OAAhB,KAA4Bf,SAAlC;AACA,SAAOW,KAAKR,SAAL,CAAe,EAAED,KAAKW,IAAP,EAAaC,MAAb,EAAqBC,OAArB,EAAf,CAAP;AACD","file":"loader.js","sourcesContent":["import DataLoader from 'dataloader';\n\nexport default class Loader {\n  constructor(http) {\n    this.loader = new DataLoader(fetchEntity(http));\n  }\n\n  load(urlObject, { cache } = { cache: false }) {\n    const url = stringify(urlObject);\n    return this.loader.load(url);\n  }\n\n  clearUrls() {\n    this.loader._promiseCache.clear();\n  }\n\n  clear(urlObject) {\n    let url;\n\n    if (!(typeof urlObject === 'string')) {\n      url = stringify(urlObject);\n    } else {\n      url = urlObject;\n    }\n    this.loader.clear(url);\n  }\n}\n\nfunction fetchEntity(http) {\n  // dataloader's caching function: URL => HTTP response.\n  // stores any recieved URL/responses in the dataloader cache.\n  return (urls) => {\n    return Promise.all(\n      urls.map(url => http(JSON.parse(url)))\n    );\n  }\n}\n\nfunction stringify(urlObject) {\n  const { href, params, headers } = urlObject;\n  return JSON.stringify({ url: href, params, headers });\n}\n"]}