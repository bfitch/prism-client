{"version":3,"sources":["../../../src/actions/show.js"],"names":["show","entityName","UrlBuilder","store","loader","normalize","resetForceFetch","forceFetchResource","includeResponseHeaders","obj","args","opts","id","nestedId","undefined","url","options","forceFetch","clearCache","variables","forceFetching","entity","get","headers","clearUrls","load","then","res","entities","result","set"],"mappings":";;AAAA,eAAe,SAASA,IAAT,CAAc;AAC3BC,YAD2B;AAE3BC,YAF2B;AAG3BC,OAH2B;AAI3BC,QAJ2B;AAK3BC,WAL2B;AAM3BC,iBAN2B;AAO3BC,oBAP2B;AAQ3BC;AAR2B,CAAd,EASZC,GATY,EASPC,IATO,EASDC,IATC,EASK;;AAElB,QAAMC,KAAMD,KAAKE,QAAL,GAAgBC,SAAhB,GAA6BH,KAAKC,EAAL,IAAW,IAApD;AACA,QAAMG,MAAM,IAAIb,UAAJ,CAAeO,GAAf,EAAoBC,IAApB,EAA0BC,KAAKI,GAA/B,EAAoCH,EAApC,EAAwCD,KAAKE,QAA7C,CAAZ;AACA,QAAM,EAAEG,SAAS,EAAEC,aAAa,KAAf,EAAsBC,aAAa,KAAnC,KAA6C,EAAxD,KAA6ER,IAAnF;AAAA,QAAqES,SAArE,4BAAmFT,IAAnF;AACA,QAAMU,gBAAiBH,cAAcV,kBAArC;;AAEA,MAAI,CAACa,aAAL,EAAoB;AAClB,UAAMC,SAASlB,MAAMmB,GAAN,CAAUrB,UAAV,EAAuBU,KAAKE,QAAL,IAAiBJ,IAAIG,EAAJ,CAAjB,IAA4BO,UAAUP,EAAV,CAAnD,CAAf;;AAEA,QAAIS,MAAJ,EAAY;AACV,UAAIb,sBAAJ,EAA4B;AAC1B,eAAO,EAAEe,SAAS,IAAX,EAAiBF,MAAjB,EAAP;AACD,OAFD,MAEO;AACL,eAAOA,MAAP;AACD;AACF;AACF;AACD,MAAID,aAAJ,EAAmBhB,OAAOoB,SAAP;AACnB,MAAIN,UAAJ,EAAgBf,MAAMe,UAAN;;AAEhB,SAAOd,OAAOqB,IAAP,CAAYV,GAAZ,EAAiBW,IAAjB,CAAsBC,OAAO;AAClC,UAAM,EAAEC,QAAF,EAAYC,MAAZ,KAAuBxB,UAAUsB,GAAV,EAAelB,GAAf,EAAoBU,SAApB,CAA7B;AACAhB,UAAM2B,GAAN,CAAUF,QAAV;;AAEAtB,oBAAgBW,UAAhB;;AAEA,QAAIT,sBAAJ,EAA4B;AAC1B,aAAO;AACLe,iBAASI,IAAIJ,OADR;AAELF,gBAAQO,SAAS3B,UAAT,EAAqB4B,MAArB;AAFH,OAAP;AAID,KALD,MAKO;AACL,aAAOD,SAAS3B,UAAT,EAAqB4B,MAArB,CAAP;AACD;AACF,GAdM,CAAP;AAeD","file":"show.js","sourcesContent":["export default function show({\n  entityName,\n  UrlBuilder,\n  store,\n  loader,\n  normalize,\n  resetForceFetch,\n  forceFetchResource,\n  includeResponseHeaders\n}, obj, args, opts) {\n\n  const id  = opts.nestedId ? undefined : (opts.id || 'id');\n  const url = new UrlBuilder(obj, args, opts.url, id, opts.nestedId);\n  const { options: { forceFetch = false, clearCache = false } = {}, ...variables } = args;\n  const forceFetching = (forceFetch || forceFetchResource);\n\n  if (!forceFetching) {\n    const entity = store.get(entityName, (opts.nestedId || obj[id] || variables[id]));\n\n    if (entity) {\n      if (includeResponseHeaders) {\n        return { headers: null, entity };\n      } else {\n        return entity;\n      }\n    }\n  }\n  if (forceFetching) loader.clearUrls();\n  if (clearCache) store.clearCache();\n\n  return loader.load(url).then(res => {\n    const { entities, result } = normalize(res, obj, variables);\n    store.set(entities);\n\n    resetForceFetch(forceFetch);\n\n    if (includeResponseHeaders) {\n      return {\n        headers: res.headers,\n        entity: entities[entityName][result]\n      };\n    } else {\n      return entities[entityName][result];\n    }\n  });\n}\n"]}