{"version":3,"sources":["../../../src/actions/update.js"],"names":["update","entityName","UrlBuilder","http","store","loader","serialize","normalize","resetForceFetch","method","opts","resolvers","args","context","_","url","options","forceFetch","clearCache","variables","request","href","params","headers","data","then","res","entities","result","obj","set","clearUrls","entity","cache"],"mappings":";;AAAA,OAAO,SAASA,MAAT,CAAgB;AACrBC,YADqB;AAErBC,YAFqB;AAGrBC,MAHqB;AAIrBC,OAJqB;AAKrBC,QALqB;AAMrBC,WANqB;AAOrBC,WAPqB;AAQrBC,iBARqB;AASrBR;AATqB,CAAhB,QAUyB;AAAA,MAA7B,EAAES,SAAS,KAAX,EAA6B;AAAA,MAARC,IAAQ;;AAE9B,SAAO,CAACC,SAAD,EAAYC,IAAZ,EAAkBC,OAAlB,EAA2BC,CAA3B,KAAiC;AACtC,UAAMC,MAAM,IAAIb,UAAJ,CAAeS,SAAf,EAA0BC,IAA1B,EAAgCF,IAAhC,CAAZ;AACA,UAAM,EAAEM,SAAS,EAAEC,aAAa,KAAf,EAAsBC,aAAa,KAAnC,KAA6C,EAAxD,KAA6EN,IAAnF;AAAA,UAAqEO,SAArE,4BAAmFP,IAAnF;;AAEA,QAAIM,UAAJ,EAAgBd,MAAMc,UAAN;;AAEhB,UAAME,UAAUjB,KAAK;AACnBM,YADmB;AAEnBM,WAAKA,IAAIM,IAFU;AAGnBC,cAAQP,IAAIO,MAHO;AAInBC,eAASR,IAAIQ,OAJM;AAKnBC,YAAMlB,UAAUa,SAAV;AALa,KAAL,CAAhB;;AAQA,WAAOC,QAAQK,IAAR,CAAaC,OAAO;AACzB,YAAM,EAAEC,QAAF,EAAYC,MAAZ,KAAuBrB,UAAUmB,GAAV,EAAe,EAAEG,KAAKlB,SAAP,EAAkBC,MAAMO,SAAxB,EAAf,CAA7B;AACAf,YAAM0B,GAAN,CAAUH,QAAV;;AAEAtB,aAAO0B,SAAP;AACAvB,sBAAgBS,UAAhB;;AAEA,YAAMe,SAASL,SAAS1B,UAAT,EAAqB2B,MAArB,CAAf;AACA5B,aAAOI,MAAM6B,KAAb,EAAoBD,MAApB;;AAEA,aAAOA,MAAP;AACD,KAXM,CAAP;AAYD,GA1BD;AA2BD","file":"update.js","sourcesContent":["export function update({\n  entityName,\n  UrlBuilder,\n  http,\n  store,\n  loader,\n  serialize,\n  normalize,\n  resetForceFetch,\n  update\n}, { method = 'put', ...opts }) {\n\n  return (resolvers, args, context, _) => {\n    const url = new UrlBuilder(resolvers, args, opts);\n    const { options: { forceFetch = false, clearCache = false } = {}, ...variables } = args;\n\n    if (clearCache) store.clearCache();\n\n    const request = http({\n      method,\n      url: url.href,\n      params: url.params,\n      headers: url.headers,\n      data: serialize(variables)\n    });\n\n    return request.then(res => {\n      const { entities, result } = normalize(res, { obj: resolvers, args: variables });\n      store.set(entities);\n\n      loader.clearUrls();\n      resetForceFetch(forceFetch);\n\n      const entity = entities[entityName][result];\n      update(store.cache, entity);\n\n      return entity;\n    });\n  }\n}\n"]}